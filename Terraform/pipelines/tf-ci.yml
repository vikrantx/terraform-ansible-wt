# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- bash: |
    sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
    curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
    sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    sudo apt-get update && sudo apt-get install terraform
  displayName: 'Bash : Install Terraform'

- bash: |
    cd Terraform
    terraform init
  displayName: 'Bash : Init'

- bash: |
    ls -R
  displayName: 'Bash : PWD'

- bash: |
    terraform plan -out='stageplan.tfplan' -var-file="environment/stage/stage.tfvars"
  displayName: 'Bash : Plan Out'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: Terraform
    Contents: '**.tfplan'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'